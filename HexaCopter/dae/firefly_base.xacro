<?xml version="1.0"?>
<!--
  Copyright 2015 Fadri Furrer, ASL, ETH Zurich, Switzerland
  Copyright 2015 Michael Burri, ASL, ETH Zurich, Switzerland
  Copyright 2015 Mina Kamel, ASL, ETH Zurich, Switzerland
  Copyright 2015 Janosch Nikolic, ASL, ETH Zurich, Switzerland
  Copyright 2015 Markus Achtelik, ASL, ETH Zurich, Switzerland

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

  http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->

<robot name="firefly" xmlns:xacro="http://ros.org/wiki/xacro">
  <xacro:include filename="$(find rotors_description)/urdf/component_snippets.xacro" />
  <!-- Instantiate firefly "mechanics" -->
  <xacro:include filename="$(find rotors_description)/urdf/firefly.xacro" />

  <!-- Instantiate a controller. -->
  <xacro:controller_plugin_macro namespace="${namespace}" imu_sub_topic="imu" />
  
  <!-- Instantiate a ROS message interface -->
  <!-- <xacro:ros_interface_plugin_macro namespace="${namespace}" />-->

  <xacro:if value="$(arg enable_mavlink_interface)">
    <!-- Instantiate mavlink telemetry interface. -->
    <xacro:default_mavlink_interface namespace="${namespace}" imu_sub_topic="imu" rotor_count="6" />
  </xacro:if>

  <!-- Mount an ADIS16448 IMU. -->
  <xacro:default_imu namespace="${namespace}" parent_link="${namespace}/base_link" />

  <xacro:if value="$(arg enable_ground_truth)">
    <xacro:ground_truth_imu_and_odometry namespace="${namespace}" parent_link="${namespace}/base_link" />
  </xacro:if>

  <xacro:if value="$(arg enable_logging)">
    <!-- Instantiate a logger -->
    <xacro:bag_plugin_macro
      namespace="${namespace}"
      bag_file="$(arg log_file)"
      rotor_velocity_slowdown_sim="${rotor_velocity_slowdown_sim}" 
      wait_to_record_bag="$(arg wait_to_record_bag)" />
  </xacro:if>
  <link name ="${namespace}/camera_1/camera_depth_link">
   <visual>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <mesh filename="package://rotors_description/meshes/kinect_camera_simple.dae" scale="0.65 0.65 0.65"/>
      </geometry>
    </visual>
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <box size="0.1 0.1 0.002"/>
      </geometry>
    </collision>
      <inertial>
        <mass value="0.13"/>
        <origin xyz="0 0 0"/>
        <inertia ixx="1e-6" ixy="0.0" ixz="0.0"
             iyy="1e-6" iyz="0.0"
             izz="1e-6" />
      </inertial>
  </link>

  <joint name="${namespace}/camera_1/camera_depth_joint" type="fixed">
    <axis xyz="0 1 0"/>
    <origin xyz="0.065 0 0.07" rpy="0 0 0"/>
    <parent link="${namespace}/base_link"/>
    <child link="${namespace}/camera_1/camera_depth_link"/>
  </joint>
  <joint name="${namespace}/camera_1/camera_optical_joint" type="fixed">
            <origin xyz="0 0 0" rpy="-1.5708 0 -1.5708"/>
            <parent link="${namespace}/camera_1/camera_depth_link"/>
            <child link="${namespace}/camera_1/camera_frame_optical"/>
  </joint>
  
  <link name="${namespace}/camera_1/camera_frame_optical"/>

   <gazebo reference="${namespace}/camera_1/camera_depth_link">
      <sensor type="depth" name="${namespace}_depth_camera">       <!--ray, camera, depth-->
        <always_on>true</always_on>
        <update_rate>30.0</update_rate>                            <!--30 frames  =  frequency !-->
        <camera>
          <horizontal_fov>2</horizontal_fov>
          <image>
            <width>640</width>
            <height>480</height>
            <format>L8</format>
          </image>
          <clip>
            <near>0.01</near>
            <far>10</far>
          </clip> 
        </camera>
        <plugin name="camera_depth_controller" filename="libgazebo_ros_openni_kinect.so"> 
          <robotNamespace>${namespace}</robotNamespace>
          <baseline>0.11</baseline>
          <alwaysOn>true</alwaysOn>
          <visualize>true</visualize>                                                          <!--DATA LINES-->
          <updateRate>0.0</updateRate>
          <cameraName>camera_1</cameraName>
          <imageTopicName>depth/image_raw</imageTopicName>
          <cameraInfoTopicName>depth/camera_info</cameraInfoTopicName>
          <depthImageTopicName>/depth/parity</depthImageTopicName>
          <depthImageInfoTopicName>/depth/camera_info</depthImageInfoTopicName>
          <pointCloudTopicName>/depth/points</pointCloudTopicName>
          <frameName>camera_1/camera_frame_optical</frameName>                                    <!-- Format = camera name/ any link -->
          <pointCloudCutoff>0.5</pointCloudCutoff>
          <pointCloudCutoffMax>10</pointCloudCutoffMax>
          <hackBaseline>0.0</hackBaseline>
          <distortionK1>0.0</distortionK1>
          <distortionK2>0.0</distortionK2>
          <distortionK3>0.0</distortionK3>
          <distortionT1>0.0</distortionT1>
          <distortionT2>0.0</distortionT2>
           <CxPrime>0</CxPrime>
          <Cx>0</Cx>
          <Cy>0</Cy>
          <focalLength>0</focalLength> 
        </plugin>
      </sensor>
    </gazebo>
</robot>

